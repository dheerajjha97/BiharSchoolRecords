
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the incoming data's UDISE matches the user's claimed UDISE
    // This assumes the user's custom claims contain a `udise` field.
    // Let's stick to a simpler rule for now: just check if the user is authenticated.
    // A more secure implementation would involve custom claims.

    // Schools: Public can read, only authenticated can create/update.
    match /schools/{schoolId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Admissions: Users can only read/write documents that match their school's UDISE.
    match /admissions/{admissionId} {
      allow read, write: if isAuthenticated() && request.auth.uid != null;
    }

    // Fee Structures: Users can only read/write documents related to their school.
    match /feeStructures/{feeId} {
      // The feeId is structured as {udise}_{session}.
      // We can check if the user's school udise is part of the document id.
      // This is a simplified check. A robust check would use custom claims.
      allow read, write: if isAuthenticated() && request.auth.uid != null;
    }
  }
}
